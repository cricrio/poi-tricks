
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."trick_difficulty" AS ENUM (
    'others',
    'beginner',
    'intermediate',
    'basics',
    'advanced'
);

ALTER TYPE "public"."trick_difficulty" OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."add_trick_to_collections"("p_user_id" "uuid", "p_trick_id" "uuid", "p_category" character varying) RETURNS "void"
    LANGUAGE "plpgsql"
    AS $$BEGIN
    IF NOT EXISTS (
        SELECT 1
        FROM collections
        WHERE user_id = p_user_id
        AND trick_id = p_trick_id
    ) THEN
        INSERT INTO collections (user_id, trick_id, category)
        VALUES (p_user_id, p_trick_id, p_category);
    ELSE
        UPDATE collections
        SET category = p_category
        WHERE user_id = p_user_id
        AND trick_id = p_trick_id;
    END IF;
END;
$$;

ALTER FUNCTION "public"."add_trick_to_collections"("p_user_id" "uuid", "p_trick_id" "uuid", "p_category" character varying) OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."collections" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" "uuid" NOT NULL,
    "trick_id" "text" NOT NULL,
    "category" character varying
);

ALTER TABLE "public"."collections" OWNER TO "postgres";

ALTER TABLE "public"."collections" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."collections_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."creator_platforms" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "platform" "text",
    "url" character varying,
    "creator" bigint,
    "external_id" "text"
);

ALTER TABLE "public"."creator_platforms" OWNER TO "postgres";

ALTER TABLE "public"."creator_platforms" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."creator_platforms_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."creator_tricks" (
    "creator_id" bigint NOT NULL,
    "trick_id" "text" NOT NULL
);

ALTER TABLE "public"."creator_tricks" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."creators" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "bio" "text",
    "picture" "text"
);

ALTER TABLE "public"."creators" OWNER TO "postgres";

ALTER TABLE "public"."creators" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."creators_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."trick_prerequisites" (
    "trick_id" "text" NOT NULL,
    "prerequisite_id" "text" NOT NULL
);

ALTER TABLE "public"."trick_prerequisites" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."tricks" (
    "id" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "preview" "text",
    "prerequisites" "text"[],
    "difficulty" "text",
    "types" "text"[]
);

ALTER TABLE "public"."tricks" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."videos" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "externalId" "text",
    "source" character varying,
    "trickId" "text",
    "creator" bigint,
    "title" character varying DEFAULT ''::character varying
);

ALTER TABLE "public"."videos" OWNER TO "postgres";

ALTER TABLE "public"."videos" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."videos_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."collections"
    ADD CONSTRAINT "collections_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."creator_platforms"
    ADD CONSTRAINT "creator_platforms_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."creator_platforms"
    ADD CONSTRAINT "creator_platforms_url_unique" UNIQUE ("url");

ALTER TABLE ONLY "public"."creator_tricks"
    ADD CONSTRAINT "creator_tricks_pkey" PRIMARY KEY ("creator_id", "trick_id");

ALTER TABLE ONLY "public"."creators"
    ADD CONSTRAINT "creators_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."trick_prerequisites"
    ADD CONSTRAINT "trick_prerequisites_pkey" PRIMARY KEY ("trick_id", "prerequisite_id");

ALTER TABLE ONLY "public"."tricks"
    ADD CONSTRAINT "tricks_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."videos"
    ADD CONSTRAINT "videos_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."collections"
    ADD CONSTRAINT "collections_trick_id_fkey" FOREIGN KEY ("trick_id") REFERENCES "public"."tricks"("id");

ALTER TABLE ONLY "public"."collections"
    ADD CONSTRAINT "collections_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."creator_platforms"
    ADD CONSTRAINT "creator_platforms_creator_fkey" FOREIGN KEY ("creator") REFERENCES "public"."creators"("id");

ALTER TABLE ONLY "public"."creator_tricks"
    ADD CONSTRAINT "creator_tricks_creator_id_fkey" FOREIGN KEY ("creator_id") REFERENCES "public"."creators"("id");

ALTER TABLE ONLY "public"."creator_tricks"
    ADD CONSTRAINT "creator_tricks_trick_id_fkey" FOREIGN KEY ("trick_id") REFERENCES "public"."tricks"("id");

ALTER TABLE ONLY "public"."trick_prerequisites"
    ADD CONSTRAINT "trick_prerequisites_prerequisite_id_fkey" FOREIGN KEY ("prerequisite_id") REFERENCES "public"."tricks"("id");

ALTER TABLE ONLY "public"."trick_prerequisites"
    ADD CONSTRAINT "trick_prerequisites_trick_id_fkey" FOREIGN KEY ("trick_id") REFERENCES "public"."tricks"("id");

ALTER TABLE ONLY "public"."videos"
    ADD CONSTRAINT "videos_creator_fkey" FOREIGN KEY ("creator") REFERENCES "public"."creators"("id");

ALTER TABLE ONLY "public"."videos"
    ADD CONSTRAINT "videos_trickId_fkey" FOREIGN KEY ("trickId") REFERENCES "public"."tricks"("id");

REVOKE USAGE ON SCHEMA "public" FROM PUBLIC;
GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON FUNCTION "public"."add_trick_to_collections"("p_user_id" "uuid", "p_trick_id" "uuid", "p_category" character varying) TO "anon";
GRANT ALL ON FUNCTION "public"."add_trick_to_collections"("p_user_id" "uuid", "p_trick_id" "uuid", "p_category" character varying) TO "authenticated";
GRANT ALL ON FUNCTION "public"."add_trick_to_collections"("p_user_id" "uuid", "p_trick_id" "uuid", "p_category" character varying) TO "service_role";

GRANT ALL ON TABLE "public"."collections" TO "anon";
GRANT ALL ON TABLE "public"."collections" TO "authenticated";
GRANT ALL ON TABLE "public"."collections" TO "service_role";

GRANT ALL ON SEQUENCE "public"."collections_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."collections_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."collections_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."creator_platforms" TO "anon";
GRANT ALL ON TABLE "public"."creator_platforms" TO "authenticated";
GRANT ALL ON TABLE "public"."creator_platforms" TO "service_role";

GRANT ALL ON SEQUENCE "public"."creator_platforms_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."creator_platforms_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."creator_platforms_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."creator_tricks" TO "anon";
GRANT ALL ON TABLE "public"."creator_tricks" TO "authenticated";
GRANT ALL ON TABLE "public"."creator_tricks" TO "service_role";

GRANT ALL ON TABLE "public"."creators" TO "anon";
GRANT ALL ON TABLE "public"."creators" TO "authenticated";
GRANT ALL ON TABLE "public"."creators" TO "service_role";

GRANT ALL ON SEQUENCE "public"."creators_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."creators_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."creators_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."trick_prerequisites" TO "anon";
GRANT ALL ON TABLE "public"."trick_prerequisites" TO "authenticated";
GRANT ALL ON TABLE "public"."trick_prerequisites" TO "service_role";

GRANT ALL ON TABLE "public"."tricks" TO "anon";
GRANT ALL ON TABLE "public"."tricks" TO "authenticated";
GRANT ALL ON TABLE "public"."tricks" TO "service_role";

GRANT ALL ON TABLE "public"."videos" TO "anon";
GRANT ALL ON TABLE "public"."videos" TO "authenticated";
GRANT ALL ON TABLE "public"."videos" TO "service_role";

GRANT ALL ON SEQUENCE "public"."videos_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."videos_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."videos_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
